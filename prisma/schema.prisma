generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model activity {
  id         Int       @id @default(autoincrement())
  ticket_id  Int
  creator_id String
  change     String?   @db.VarChar(255)
  timestamp  DateTime? @default(now()) @db.Timestamp(6)
  tickets    tickets   @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  creator    user      @relation("ActivityCreator", fields: [creator_id], references: [id])
}

model tickets {
  id           Int        @id @default(autoincrement())
  owner_id     String
  creator_id   String
  title        String?    @db.VarChar(255)
  description  String?
  priority     Int?
  status       Int?
  datecreated  DateTime?  @default(now()) @db.Timestamp(6)
  datemodified DateTime?  @default(now()) @db.Timestamp(6)
  activity     activity[]
  comments     comments[]
  owner        user       @relation("TicketOwner", fields: [owner_id], references: [id])
  creator      user       @relation("TicketCreator", fields: [creator_id], references: [id])
}

model comments {
  id         Int      @id @default(autoincrement())
  ticket_id  Int
  creator_id String
  content    String
  timestamp  DateTime @default(now()) @db.Timestamp(6)
  tickets    tickets  @relation(fields: [ticket_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  creator    user     @relation("CommentsCreator", fields: [creator_id], references: [id])
}

model user {
  id              String     @id
  first_name      String?    @db.VarChar(255)
  last_name       String?    @db.VarChar(255)
  email           String     @unique @db.VarChar(255)
  datecreated     DateTime?  @default(now()) @db.Timestamp(6)
  datemodified    DateTime?  @default(now()) @db.Timestamp(6)
  ticketsOwned    tickets[]  @relation("TicketOwner")
  ticketsCreated  tickets[]  @relation("TicketCreator")
  commentsCreated comments[] @relation("CommentsCreator")
  activityCreated activity[] @relation("ActivityCreator")
}
